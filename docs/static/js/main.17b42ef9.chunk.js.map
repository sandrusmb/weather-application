{"version":3,"sources":["components/WeatherInfo.js","components/WeatherForm.js","components/App.js","index.js","components/Keys.js"],"names":["WeatherInfo","props","console","log","error","className","temperature","city","country","description","humidity","wind_speed","WeatherForm","onSubmit","getWeather","type","name","placeholder","autoFocus","App","ev","a","preventDefault","target","elements","cityValue","value","countryValue","API_URL","WEATHER_KEY","fetch","response","json","data","setState","main","temp","weather","wind","speed","sys","state","this","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"6TA6BeA,MA3Bf,SAAqBC,GAEnB,OADAC,QAAQC,IAAIF,GAEV,6BACGA,EAAMG,OACL,yBAAKC,UAAU,sBACb,2BAAIJ,EAAMG,QAGbH,EAAMK,YACL,yBAAKD,UAAU,kBACb,wCACaJ,EAAMM,KADnB,KAC2BN,EAAMO,SAEjC,2CACgBP,EAAMK,YADtB,WACwCL,EAAMQ,aAE9C,wCAAcR,EAAMS,SAApB,KACA,0CAAgBT,EAAMU,aAGxB,gCCOOC,MA5Bf,SAAqBX,GACnB,OACE,yBAAKI,UAAU,kBACb,0BAAMQ,SAAUZ,EAAMa,YACpB,yBAAKT,UAAU,cACb,2BACEU,KAAK,OACLC,KAAK,OACLC,YAAY,iBACZZ,UAAU,eACVa,WAAS,KAGb,yBAAKb,UAAU,cACb,2BACEU,KAAK,OACLC,KAAK,UACLC,YAAY,oBACZZ,UAAU,eACVa,WAAS,KAGb,4BAAQb,UAAU,6BAAlB,a,OCyCOc,E,YA1Db,aAAe,IAAD,8BACZ,+CAYFL,WAbc,uCAaD,WAAMM,GAAN,6BAAAC,EAAA,yDAMXD,EAAGE,iBANQ,EAOeF,EAAGG,OAAOC,SAA5BjB,EAPG,EAOHA,KAAMC,EAPH,EAOGA,QACRiB,EAAYlB,EAAKmB,MACjBC,EAAenB,EAAQkB,OAEzBD,EAXO,wBAYHG,EAZG,2DAY2DH,EAZ3D,YAYwEE,EAZxE,kBAY8FE,cAZ9F,0BAccC,MAAMF,GAdpB,cAcHG,EAdG,iBAeUA,EAASC,OAfnB,QAeHC,EAfG,OAiBT,EAAKC,SAAS,CACZ5B,YAAa2B,EAAKE,KAAKC,KACvB3B,YAAawB,EAAKI,QAAQ,GAAG5B,YAC7BC,SAAUuB,EAAKE,KAAKzB,SACpBC,WAAYsB,EAAKK,KAAKC,MACtBhC,KAAM0B,EAAKjB,KACXR,QAASyB,EAAKO,IAAIhC,QAClBJ,MAAO,OAxBA,wBA2BT,EAAK8B,SAAS,CAAE9B,MAAO,sCA3Bd,4CAbC,sDAEZ,EAAKqC,MAAQ,CACXnC,YAAa,GACbG,YAAa,GACbC,SAAU,GACVC,WAAY,GACZJ,KAAM,GACNC,QAAS,GACTJ,MAAO,MATG,E,sEA6CZ,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iCACb,kBAAC,EAAD,CAAaS,WAAY4B,KAAK5B,aAC9B,kBAAC,EAAgB4B,KAAKD,c,GAnDhBE,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,gBCLjDC,EAAOC,QAAU,CACfrB,YAAa,sC","file":"static/js/main.17b42ef9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction WeatherInfo(props) {\n  console.log(props);\n  return (\n    <div>\n      {props.error && (\n        <div className=\"alert alert-danger\">\n          <p>{props.error}</p>\n        </div>\n      )}\n      {props.temperature ? (\n        <div className=\"card card-body\">\n          <p>\n            Location: {props.city}, {props.country}\n          </p>\n          <p>\n            Temperature: {props.temperature} ÂºC, {props.description}\n          </p>\n          <p>Humidity: {props.humidity}%</p>\n          <p>Wind speed: {props.wind_speed}</p>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default WeatherInfo;\n\n/* // lo mismo que\n\nconst WeatherInfo = props => {\n  return <div>Weather Info</div>;\n};\n\nconst WeatherInfo = function(props) {\n  return <div>Weather Info</div>;\n}; */\n","import React from \"react\";\n\nfunction WeatherForm(props) {\n  return (\n    <div className=\"card card-body\">\n      <form onSubmit={props.getWeather}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            name=\"city\"\n            placeholder=\"Your city name\"\n            className=\"form-control\"\n            autoFocus\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            name=\"country\"\n            placeholder=\"Your country name\"\n            className=\"form-control\"\n            autoFocus\n          />\n        </div>\n        <button className=\"btn btn-success btn-block\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default WeatherForm;\n","import React from \"react\";\nimport \"../stylesheets/App.css\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForm from \"./WeatherForm\";\nimport { WEATHER_KEY } from \"./Keys\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      temperature: \"\",\n      description: \"\",\n      humidity: \"\",\n      wind_speed: \"\",\n      city: \"\",\n      country: \"\",\n      error: null\n    };\n  }\n\n  getWeather = async ev => {\n    /* console.log(\n      ev.target.elements.city.value,\n      ev.target.elements.country.value\n    ); */\n\n    ev.preventDefault();\n    const { city, country } = ev.target.elements;\n    const cityValue = city.value;\n    const countryValue = country.value;\n\n    if (cityValue) {\n      const API_URL = `http://api.openweathermap.org/data/2.5/weather?q=${cityValue},${countryValue}&appid=${WEATHER_KEY}&units=metric`;\n\n      const response = await fetch(API_URL);\n      const data = await response.json();\n\n      this.setState({\n        temperature: data.main.temp,\n        description: data.weather[0].description,\n        humidity: data.main.humidity,\n        wind_speed: data.wind.speed,\n        city: data.name,\n        country: data.sys.country,\n        error: null\n      });\n    } else {\n      this.setState({ error: \"Please enter a city and a country\" });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container p-4\">\n        <div className=\"row\">\n          <div className=\"col-md-4 mx-auto center-block\">\n            <WeatherForm getWeather={this.getWeather} />\n            <WeatherInfo {...this.state} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = {\n  WEATHER_KEY: \"b9a89914cfc9a581590f3adee5da3cc0\"\n};\n"],"sourceRoot":""}